1 环境检查
[root@m01 ~]# cat /etc/redhat-release
CentOS Linux release 7.4.1708 (Core)

[root@m01 ~]# uname -r
3.10.0-693.el7.x86_64

[root@m01 ~]# getenforce
Disabled

[root@m01 ~]# systemctl status firewalld.service
● firewalld.service - firewalld - dynamic firewall daemon
   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)
   Active: inactive (dead)
     Docs: man:firewalld(1)
2.2 安装zabbix过程
2.2.1 安装方式选择
　　编译安装 （服务较多，环境复杂）

　　yum安装（干净环境）

　　使用yum 需要镜像yum源 http://www.cnblogs.com/clsn/p/7866643.html

2.2.2 服务端快速安装脚本
#!/bin/bash
#clsn

#设置解析 注意：网络条件较好时，可以不用自建yum源
# echo '10.0.0.1 mirrors.aliyuncs.com mirrors.aliyun.com repo.zabbix.com' >> /etc/hosts

#安装zabbix源、aliyun YUM源
curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo
rpm -ivh http://repo.zabbix.com/zabbix/3.0/rhel/7/x86_64/zabbix-release-3.0-1.el7.noarch.rpm

#安装zabbix 
yum install -y zabbix-server-mysql zabbix-web-mysql

#安装启动 mariadb数据库
yum install -y  mariadb-server
systemctl start mariadb.service

#创建数据库
mysql -e 'create database zabbix character set utf8 collate utf8_bin;'
mysql -e 'grant all privileges on zabbix.* to zabbix@localhost identified by "zabbix";'

#导入数据
zcat /usr/share/doc/zabbix-server-mysql-3.0.13/create.sql.gz|mysql -uzabbix -pzabbix zabbix

#配置zabbixserver连接mysql
sed -i.ori '115a DBPassword=zabbix' /etc/zabbix/zabbix_server.conf

#添加时区
sed -i.ori '18a php_value date.timezone  Asia/Shanghai' /etc/httpd/conf.d/zabbix.conf

#解决中文乱码
yum -y install wqy-microhei-fonts
\cp /usr/share/fonts/wqy-microhei/wqy-microhei.ttc /usr/share/fonts/dejavu/DejaVuSans.ttf

#启动服务
systemctl start zabbix-server
systemctl start httpd

#写入开机自启动
chmod +x /etc/rc.d/rc.local
cat >>/etc/rc.d/rc.local<<EOF
systemctl start mariadb.service
systemctl start httpd
systemctl start zabbix-server
EOF

#输出信息
echo "浏览器访问 http://`hostname -I|awk '{print $1}'`/zabbix"
2.2.3 客户端快速部署脚本
#!/bin/bash
#clsn

#设置解析
echo '10.0.0.1 mirrors.aliyuncs.com mirrors.aliyun.com repo.zabbix.com' >> /etc/hosts

#安装zabbix源、aliyu nYUM源
curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo
rpm -ivh http://repo.zabbix.com/zabbix/3.0/rhel/7/x86_64/zabbix-release-3.0-1.el7.noarch.rpm

#安装zabbix客户端
yum install zabbix-agent -y
sed -i.ori 's#Server=127.0.0.1#Server=172.16.1.61#' /etc/zabbix/zabbix_agentd.conf
systemctl start  zabbix-agent.service

#写入开机自启动
chmod +x /etc/rc.d/rc.local
cat >>/etc/rc.d/rc.local<<EOF
systemctl start  zabbix-agent.service
EOF
2.3 检测连通性
2.3.1 服务端安装zabbix-get检测工具
yum install zabbix-get
2.3.2 在服务端进行测试
注意：只能在服务端进行测试

zabbix_get -s 172.16.1.61 -p 10050 -k "system.cpu.load[all,avg1]"
zabbix_get -s 172.16.1.21 -p 10050 -k "system.cpu.load[all,avg1]"
测试结果

[root@m01 ~]# zabbix_get -s 172.16.1.61 -p 10050 -k "system.cpu.load[all,avg1]"
0.000000

[root@m01 ~]# zabbix_get -s 172.16.1.21 -p 10050 -k "system.cpu.load[all,avg1]"
0.000000
第3章 web界面操作
3.1 zabbix的web安装
3.1.1 使用浏览器访问
　　http://10.0.0.61/zabbix/setup.php



   在检测信息时，可查看具体的报错信息进行不同的解决

 

   选择mysql数据库，输入密码即可

 

   host与port不需要修改，name自定义

 

确认信息,正确点击下一步

 

   安装完成、点击finsh

 

      进入登陆界面  账号Admin密码zabbix   注意A大写

 

3.2 添加监控信息
3.2.1 修改监控管理机zabbix server
配置 >> 主机

 

主机名称： 要与主机名相同，这是zabbix server程序用的

可见名称： 显示在zabbix网页上的，给我们看的

 

   修改后，要将下面的已启用要勾上

 

   添加完成就有了管理机的监控主机

 

3.2.2 添加新的主机
配置 >> 主机 >> 创建主机

 

注意勾选以启用

 

   然后添加模板，选择linux OS ，先点小添加，再点大添加。

 

   添加完成，将会又两条监控主机信息

 

3.2.3 查看监控内容
检测中  >> 最新数据

   在最新数据中需要筛选，

 

   输入ip或者名字都能够搜索出来

 

在下面就会列出所有的监控项

 

3.2.4 查看图像
检测中 >> 图形

   选择正确的主机。选择要查看的图形即可出图

 

第4章 自定义监控与监控报警
4.1 自定义监控
4.1.1 说明
zabbix自带模板Template OS Linux (Template App Zabbix Agent)提供CPU、内存、磁盘、网卡等常规监控，只要新加主机关联此模板，就可自动添加这些监控项。

需求：服务器登陆人数不能超过三人，超过三人报警

4.1.2 预备知识
自定义key能被server和agent认可

# 正确的key
[root@m01 ~]# zabbix_get -s 172.16.1.21 -p 10050 -k "system.uname"
Linux cache01 3.10.0-693.el7.x86_64 #1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 
# 没有登记的，自定义的key
[root@m01 ~]# zabbix_get -s 172.16.1.21 -p 10050 -k "login-user"
ZBX_NOTSUPPORTED: Unsupported item key. 
# 写错的key
[root@m01 ~]# zabbix_get -s 172.16.1.21 -p 10050 -k "system.uname1"
ZBX_NOTSUPPORTED: Unsupported item key.
4.2 实现自定义监控
4.2.1 自定义语法
UserParameter=<key>,<shell command>
UserParameter=login-user,who|wc -l
UserParameter=login-user,/bin/sh /server/scripts/login.sh
4.2.2 agent注册
[root@cache01 ~]# cd /etc/zabbix/zabbix_agentd.d/

[root@cache01 zabbix_agentd.d]# vim userparameter_login.conf
UserParameter=login-user,who|wc -l
UserParameter=login-user2,who|wc -l
UserParameter=login-user3,who|wc -l
   注意：key名字要唯一，多个key以行为分割

# 修改完成后重启服务

[root@cache01 zabbix_agentd.d]# systemctl restart zabbix-agent.service
   在server端进行get测试

[root@m01 ~]# zabbix_get -s 172.16.1.21 -p 10050 -k "login-user"
3

[root@m01 ~]# zabbix_get -s 172.16.1.21 -p 10050 -k "login-user2"
3

[root@m01 ~]# zabbix_get -s 172.16.1.21 -p 10050 -k "login-user3"
3

[root@m01 ~]# zabbix_get -s 172.16.1.21 -p 10050 -k "login-user4"
ZBX_NOTSUPPORTED: Unsupported item key.
4.2.3 在server端注册(web操作)
①   创建模板

配置 >> 模板 >> 创建模板

 

点击添加，即可创建出来模板

 

   查看创建出来的模板。↑

②   创建应用集

应用集类似(目录/文件夹)，其作用是给监控项分类。

点击 应用集 >> 创建应用集

 

      自定义应用集的名称，然后点击添加

③   创建监控项

监控项 >> 创建监控项

 

键值 -- key,即前面出创建的login-user。

 

   注意：创建监控项的时候，注意选择上应用集，即之前创建的安全。

 

④   创建触发器

触发器的作用：当监控项获取到的值达到一定条件时就触发报警

(根据需求创建)

触发器 >> 创建触发器

创建触发器，自定义名称，该名称是报警时显示的名称。

   表达式，点击右边的添加，选择表达式。 

   严重性自定义。

 

   表达式的定义 ↓ ，选择之前创建的监控项，

最新的T值为当前获取到的值。

 

   添加完成，能够在触发器中看到添加的情况

 

⑤   创建图形

以图形的方式展示出来监控信息

图形 >> 创建图形

名称自定义，关联上监控项。

 

⑥   主机关联模板

配置 >> 主机

   一个主机可以关联多个模板

 

4.2.4 查看监控的图形
 

4.3 监控报警
4.3.1 第三方报警平台
http://www.onealert.com

   　 通过 OneAlert 提供的通知分派与排班策略，以及全方位的短信、微信、QQ、电话提醒服务，您可以在最合适的时间，将最重要的信息推送给最合适的人员。

4.3.2 onealert配置
添加应用，注意添加的是zabbix

 

   实现微信报警需要关注微信公众号即可。

 

4.3.3 安装 onealert Agent
1.切换到zabbix脚本目录(如何查看zabbix脚本目录)：

cd /usr/local/zabbix-server/share/zabbix/alertscripts

#查看zabbix脚本目录
vi /etc/zabbix/zabbix_server.conf
查看AlertScriptsPath
2.获取OneITSM agent包：

wget http://www.onealert.com/agent/release/oneitsm_zabbix_release-1.0.1.tar.gz
3.解压、安装。

tar -zxf oneitsm_zabbix_release-1.0.1.tar.gz
cd oneitsm/bin
bash install.sh --#个人生成的key
注：在安装过程中根据安装提示，输入zabbix管理地址、管理员用户名、密码。

Zabbix管理地址: http://10.0.0.61/zabbix/
Zabbix管理员账号: Admin
Zabbix管理员密码:
4.当提示"安装成功"时表示安装成功!

验证告警集成

产生新的zabbix告警(problem),动作状态为“已送达”表示集成成功。
4.3.1 如何删除onealert Agent
①  删除报警媒介类型中的脚本

 

②  删除创建的用户

 

③  删除用户群组



④  删除创建的动作

 

4.3.2 触发器响应，发送报警信息
 

   在微信和邮件中，均能收到报警信息。

 

   注意：当状态改变的时候才会发邮件

   　　 好-->坏

　　    坏-->好

4.4 监控可视化
4.4.1 聚合图形
最新数据 >> 图形

 

   自定义名称

 

   点击聚合图形的名称，进行更改，添加要显示的图形即可。

 

4.4.2 幻灯片
添加幻灯片

监测中 >> 复合图形 >> 幻灯片演示

 

   创建幻灯片，名称自定，选择要显示的

 

   幻灯片根据设定的时间自动播放

4.5 模板的共享
4.5.1 主机共享
在主机页打开，全选后点击导出

 

   导入

 

4.5.2 模板共享
https://github.com/zhangyao8/zabbix-community-repos

 

第5章 监控全网服务器
5.1 需求说明
实际需求：

　　公司已经有了100台服务器，现在需要使用zabbix全部监控起来。

5.2 规划方案
常规监控：cpu，内存，磁盘，网卡  问题：怎样快速添加100台机器

   　　方法1：使用克隆的方式

 　　  方法2：自动注册和自动发现

 　　  方法3：调用zabbix api接口  curl 、python

        　　  开发自己的运维平台兼容zabbix的通道

　　　服务监控，url监控等特殊监控：自定义监控

5.2.1 api接口使用（curl）
    curl -i -X POST -H 'Content-Type:application/json' -d'{"jsonrpc": "2.0","method":"user.login","params":{"user":"Admin","password":"zabbix"},"auth": null,"id":0}' "http://10.0.0.61/zabbix/api_jsonrpc.php"

    curl -i -X POST -H 'Content-Type:application/json' -d'
    {
        "jsonrpc": "2.0",
        "method": "host.get",
        "params": {
            "output": [
                "hostid",
                "host"
            ],
            "selectInterfaces": [
                "interfaceid",
                "ip"
            ]
        },
        "id": 2,
        "auth": "6a450a8fc3dce71fd310cfe338746578"
    }' "http://10.0.0.61/zabbix/api_jsonrpc.php"
5.3 具体实施规划
5.3.1 硬件、系统、网络监控
　　所有集群节点（所有虚拟机）都监控上

　　交换机，路由器监控（简单方法：换成端口对应服务器网卡流量监控；标准方法：监控交换机的网卡）

　　snmp监控

5.3.2 应用服务监控
1. 监控备份服务器，简单方法是监控rsync端口，如果有其他更佳方案可以说明；

    方法1：监控873端口net.tcp.port[,873]
    方法2：模拟推送拉取文件
2. 监控NFS服务器，使用监控NFS进程来判断NFS服务器正常，如果有其他更佳方案可以说明；

    方法1：端口（通过111的rpc端口获取nfs端口） net.tcp.port[,111]
    方法2：showmount -e ip|wc -l
3. 监控MySQL服务器，简单方法监控mysql的3306端口，或者使用zabbix提供的Mysql模板，如果有其他更佳方案可以说明；

    方法1：端口（通过3306的mysql端口） net.tcp.port[,3306]
    方法2：mysql远程登录
    方法3：使用zabbix agent自带的模板及key
4. 监控2台web服务器，简单方法监控80端口，如果有其他更佳方案可以说明；

    方法1：端口（通过80的web端口） net.tcp.port[,80]
    方法2：看网页状态码、返回内容==zabbix 自带WEB检测
5. 监控URL地址来更精确的监控我们的网站运行正常；

    使用zabbix自带的监控Web监测 进行监控
6. 监控反向代理服务器，PPTP服务器等你在期中架构部署的服务。

nginx，pptp
ntp 端口udp 123
7. 监控Nginx的7种连接状态。

    自定义监控
5.3.3 监控服务通用方法
　　1. 监控端口 netstat ss lsof  ==》 wc -l

　　2. 监控进程 ps -ef|grep 进程|wc -l  试运行一下

　　3. 模拟客户端的使用方式监控服务端

  　　    web  ==》 curl

     　　 mysql ==》 select insert

   　　   memcache ==》 set再get

5.4 实施全网监控
安装客户端脚本，for centos6

#!/bin/bash

#设置解析
# echo '10.0.0.1 mirrors.aliyuncs.com mirrors.aliyun.com repo.zabbix.com' >> /etc/hosts

#安装zabbix源、aliyu nYUM源
curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo
curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-6.repo
rpm -ivh http://repo.zabbix.com/zabbix/3.0/rhel/6/x86_64/zabbix-release-3.0-1.el6.noarch.rpm

yum clean all
yum clean all
#安装zabbix客户端
yum install zabbix-agent -y
sed -i.ori 's#Server=127.0.0.1#Server=172.16.1.61#' /etc/zabbix/zabbix_agentd.conf
/etc/init.d/zabbix-agent start

#写入开机自启动
chmod +x /etc/rc.d/rc.local
cat >>/etc/rc.d/rc.local<<EOF
/etc/init.d/zabbix-agent start
EOF
5.4.1 使用自动发现规则
添加自动发现规则

 

   创建发现动作

 

   查看自动发现的机器。

 

5.4.2 监控备份服务器
利用系统自带键值进行监控net.tcp.listen[port] 创建新的模板

 

在服务端进行测试

[root@m01 ~]# zabbix_get -s 172.16.1.41 -p 10050 -k "net.tcp.listen[873]"
1

# 1为端口在监听 0为端口未监听
将模板添加到主机

 

5.4.3 监控NFS服务器
创建nfs监控模板

使用 proc.num[<name>,<user>,<state>,<cmdline>]  键值，检测nfs进程的数量

  

在服务端进行测试

[root@m01 ~]# zabbix_get -s 172.16.1.31 -p 10050 -k "proc.num[,,,rpc]"
5

[root@m01 ~]# zabbix_get -s 172.16.1.31 -p 10050 -k "proc.num[nfsd,,,]
8
 

将模板绑定到主机

 

5.4.4 监控MySQL服务器
将自带的mysqlkey值加上mysql的账户密码，否则不能获取到数据。

 

使用系统自带模板  net.tcp.port[<ip>,port] 利用自带的监控端口键值进行监控

 

添加新的mysql监控项端口

 

[root@m01 ~]# zabbix_get -s 172.16.1.51 -p 10050 -k "net.tcp.port[,3306]"
1

#检查是否能建立 TCP 连接到指定端口。返回 0 - 不能连接；1 - 可以连接
将模板关联到主机

 

5.4.5 监控web服务器
创建监控模板 监控 nginx服务与 80 端口

    proc.num[<name>,<user>,<state>,<cmdline>]   进程数。返回整数
    net.tcp.port[<ip>,port] 检查是否能建立 TCP 连接到指定端口。返回 0 - 不能连接；1 - 可以连接
 

[root@m01 ~]# zabbix_get -s 172.16.1.8 -p 10050 -k "proc.num[,,,nginx]"
2

[root@m01 ~]# zabbix_get -s 172.16.1.8 -p 10050 -k "net.tcp.port[,80]"
1
将模板关联到主机

 

5.4.6 监控URL地址
创建监测页面

echo ok >> /application/nginx/html/www/check.html
 

测试监控面页

[root@web03 ~]# for ip in 7 8 9 ;do curl 10.0.0.$ip/check.html ;done
ok
ok
ok
创建web监测模板

   创建应用集

 

   创建Web场景

 

   创建图形

 

将模板关联到主机

 

监测结果

 

5.4.7 监控反向代理服务器
创建自定义key

[root@lb01 ~]# cat  /etc/zabbix/zabbix_agentd.d/userparameter_nk.conf
UserParameter=keep-ip,ip a |grep 10.0.0.3|wc -l
在服务端测试

[root@m01 ~]# zabbix_get -s 172.16.1.5  -p 10050 -k "keep-ip"
1

[root@m01 ~]# zabbix_get -s 172.16.1.6  -p 10050 -k "keep-ip"
0
在web界面添加模板

 

将模板关联到主机

 

5.4.8 监控Nginx的7种连接状态
nginx服务器显示status
……
    location /status {
           stub_status on;
           access_log off;
    }
……
 

[root@web01 ~]# for ip in 7 8 9 ;do curl 172.16.1.$ip/status ;done
Active connections: 1
server accepts handled requests
 73 73 69
Reading: 0 Writing: 1 Waiting: 0

Active connections: 1
server accepts handled requests
 134 134 127
Reading: 0 Writing: 1 Waiting: 0

Active connections: 1
server accepts handled requests
 7 7 7
Reading: 0 Writing: 1 Waiting: 0
在nginx服务器上添加key

cat >/etc/zabbix/zabbix_agentd.d/userparameter_nginx_status.conf <<'EOF'
UserParameter=nginx_active,curl -s  127.0.0.1/status|awk '/Active/ {print $NF}'
UserParameter=nginx_accepts,curl -s  127.0.0.1/status|awk 'NR==3 {print $1}'
UserParameter=nginx_handled,curl -s  127.0.0.1/status|awk 'NR==3 {print $2}'
UserParameter=nginx_requests,curl -s  127.0.0.1/status|awk 'NR==3 {print $3}'
UserParameter=nginx_reading,curl -s  127.0.0.1/status|awk 'NR==4 {print $2}'
UserParameter=nginx_writing,curl -s  127.0.0.1/status|awk 'NR==4 {print $4}'
UserParameter=nginx_waiting,curl -s  127.0.0.1/status|awk 'NR==4 {print $6}'
EOF
服务端测试

[root@m01 ~]# zabbix_get -s 172.16.1.7  -p 10050 -k "nginx_waiting"
0

[root@m01 ~]# zabbix_get -s 172.16.1.8  -p 10050 -k "nginx_waiting"
0

[root@m01 ~]# zabbix_get -s 172.16.1.9  -p 10050 -k "nginx_waiting"
0
在zabbix-web上添加

 

监控项

 

添加图形

 

将模板关联到主机

 

查看添加的图形

 



第6章 自动发现与自动注册
6.1 自动注册与自动注册
6.1.1 简介
自动发现：

zabbix Server主动发现所有客户端，然后将客户端登记自己的小本本上，缺点zabbix server压力山大（网段大，客户端多），时间消耗多。
自动注册：

zabbix agent主动到zabbix Server上报到，登记；缺点agent有可能找不到Server（配置出错）
6.1.2 两种模式
被动模式：默认  agent被server抓取数据 （都是在agent的立场上说）
主动模式：agent主动将数据发到server端 （都是在agent的立场上说）
     注意： 两种模式都是在agent上进行配置

     zabbix 的使用要在hosts文件中预先做好主机名的解析

6.2 自动发现--被动模式
　第一个里程碑：完成之前的安装

zabbix Server安装完毕
   第二个里程碑：配置agent客户端

zabbix agent安装完毕，注意配置Server=172.16.1.61
   第三个里程碑：在web界面上进行配置

    web界面：配置 >> 自动发现 >> Local network
        使用自带的自动发现规则（进行修改）即可
 

    在ip范围内输入ip，注意格式；
    延迟在实际的生产环境中要大一些，实验环境可以小一些
 

   创建发现动作

    配置 >> 动作 >> Auto discovery. Linux servers.
 

①  配置动作

 

②  在条件中添加条件，让添加更准确

 

③  在操作中添加

a)  添加主机与启用主机

 

  　　  然后等待者客户端自动上门就好😏

6.3 自动注册--主动模式
　第一个里程碑：zabbix Server安装完毕 （完成）

zabbix Server安装完毕
   第二个里程碑：zabbix agent安装完毕，需要额外增加的配置

vim /etc/zabbix/zabbix_agentd.conf
ServerActive=172.16.1.61
# Hostname=Zabbix server
HostnameItem=system.hostname
 
systemctl restart zabbix-agent.service
netstat -tunlp|grep zabbix
    源文件与修改后对比



　   第三个里程碑：在web见面上进行配置

1 配置 >> 动作 >> 事件源(自动注册) >> 创建动作
 

    创建动作，添加名称即可

 

    条件中也无需修改

 

    在动作中添加动作

（添加主机、添加到主机群组、链接到模板）

 

    添加完动作后，等待就行了

    注意：重启客户端可以加速发现。但是在生产环境中勿用。

 

第7章 分布式监控与SNMP监控
7.1 分布式监控
7.1.1 作用
  　　分担压力，减轻负载

  　　多机房监控

　　zabbix Server  ===》  zabbix agent （只能同一个局域网监控）

分担压力，降低负载

  zabbix Server ===》  zabbix proxy  ===》zabbix agent1 agent2 agent3 。。。
    172.16.1.61           172.16.1.21        172.16.1.0/24
                ===》  zabbix proxy  ===》zabbix agent4 agent5 agent6 。。。
多机房监控

    zabbix Server(北京)           ==》  zabbix proxy（每个机房搭建）  ==》 zabbix agent
    122.71.240.233/172.16.1.61          122.71.241.11/172.16.2.21     172.16.2.0/24
7.1.2 环境说明
    zabbix server m01
    zabbix proxy cache01
    zabbix agent  cache01
7.1.3 配置zabbix proxy
　第一个里程碑：配置zabbix yum源，并安装proxy

rpm -ivh http://repo.zabbix.com/zabbix/3.0/rhel/7/x86_64/zabbix-release-3.0-1.el7.noarch.rpm
yum install zabbix-proxy-mysql -y
   第二个里程碑：安装数据库

    zabbix  proxy也需要数据库，这个数据库不是用于存储监控数据的 只是用于存储配置信息

   #安装数据库

yum -y install mariadb-server
systemctl start mariadb.service
   #建立数据库

mysql
create database zabbix_proxy character set utf8 collate utf8_bin;
grant all privileges on zabbix_proxy.* to zabbix@'localhost' identified by 'zabbix';
exit
   #导入数据文件

zcat /usr/share/doc/zabbix-proxy-mysql-3.0.13/schema.sql.gz |mysql -uzabbix -pzabbix zabbix_proxy
   #配置zabbix proxy 连接数据库

sed -i.ori '162a DBPassword=zabbix' /etc/zabbix/zabbix_proxy.conf
sed -i 's#Server=127.0.0.1#Server=172.16.1.61#' /etc/zabbix/zabbix_proxy.conf
sed -i 's#Hostname=Zabbix proxy#Hostname=cache01#' /etc/zabbix/zabbix_proxy.conf

# Hostname 作为后面添加的代理程序名称，要保持一致
   #启动

systemctl restart zabbix-proxy.service
   #检查端口

[root@cache01 ~]# netstat -lntup |grep zabbix
tcp        0      0 0.0.0.0:10050     0.0.0.0:*       LISTEN      105762/zabbix_agent
tcp        0      0 0.0.0.0:10051   0.0.0.0:*         LISTEN      85273/zabbix_proxy 
tcp6       0      0 :::10050       :::*      LISTEN      105762/zabbix_agent
tcp6       0      0 :::10051  :::*           LISTEN      85273/zabbix_proxy 
   第三个里程碑：修改agent配置指向 proxy

[root@cache01 ~]# grep ^Server /etc/zabbix/zabbix_agentd.conf
Server=172.16.1.61
ServerActive=172.16.1.61

[root@cache01 ~]# sed -i 's#172.16.1.61#172.16.1.21#g' /etc/zabbix/zabbix_agentd.conf

[root@cache01 ~]# grep ^Server /etc/zabbix/zabbix_agentd.conf
Server=172.16.1.21
ServerActive=172.16.1.21

[root@cache01 ~]# systemctl restart zabbix-agent.service
   第四个里程碑：web界面添加代理

    管理 >> agent代理程序 >> 创建代理

 

   代理程序名称要填写主机名

 

   稍等片刻就能在程序中出现代理

 

   在主机中能发现主机代理

 

7.2 SNMP监控
7.2.1 使用范围
　　无法安装agent  很多前辈的监控软件都可以监控各种设备  都是通过snmp监控

　　snmp simple network manager protocol 简单网络管理协议

  　 简单网络管理协议（SNMP），由一组网络管理的标准组成，包含一个应用层协议（application layer protocol）、数据库模型（database schema）和一组资源对象。该协议能够支持网络管理系统，用以监测连接到网络上的设备是否有任何引起管理上关注的情况。

7.2.2 安装snmp程序
yum -y install net-snmp net-snmp-utils
7.2.3 配置snmp程序
sed -i.ori '57a view systemview   included  .1' /etc/snmp/snmpd.conf
systemctl start snmpd.service
7.2.4 测试snmp
[root@m01 ~]# snmpwalk -v 2c -c public 127.0.0.1 sysname
SNMPv2-MIB::sysName.0 = STRING: m01
说明：

 　　   # snmpwalk 类似 zabbix_get

　　　# -v 2c  指定使用snmp协议的版本  snmp分为v1 v2 v3

　　　# -c public  指定暗号

　　　# sysname  类似zabbix的key

7.2.5 在web界面进行配置
添加新的主机，注意使用snmp接口

 

选择模板，注意使用SNMP的模板

 

    添加完成就能够在主机中看到snmp监控对的主机

 

7.2.6 附录
    ##SNMP OID列表 监控需要用到的OID
    http://www.ttlsa.com/monitor/snmp-oid/
    cmdb 资源管理系统
 

 此文章出自惨绿少年，转载请注明 

作者：惨绿少年
出处：http://clsn.io
本文版权归作者所有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文连接，否则保留追究法律责任的权利。
分类: 运维基本功
好文要顶 关注我 收藏该文  
惨绿少年
关注 - 28
粉丝 - 1475
+加关注
« 上一篇： inotify+rsync实现实时同步
» 下一篇： sed命令详解 vim高级技巧 shell编程上
posted @ 2017-11-23 17:24  惨绿少年  阅读(240082)  评论(48)  编辑  收藏
评论列表
  #1楼 2017-11-23 18:53 牛腩
支持支持

买了 阿里云三年LINUX服务器，1核心1G内存的，部署了CORE四个网站，装上MYSQL数据库，四个网站都是简单的增 删查改，用JEXUS部署起来，
结果过不久了网站总是访问不了。。工单问那边说是IO过高，每次我都要进阿里云后台重启服务器才行。。
但是我等网站打不开的时候用阿里云APP看监控发现是内存占用率都是95%以上了。。每次都是占用率慢慢上升。。直到100%，然后网站就打不开了。。。

像这种 问题应该怎么排查啊。。装这个软件可以不？

之前的这四个网站我都是装在一台阿里云WIN2012服务器，部署在IIS上，那服务器还部署了一个客户的MSSQL2012+ASPX的网站。。。以前都运行好好没问题的。。
支持(0) 反对(0)
  #2楼 [楼主] 2017-11-23 19:04 惨绿少年
@ 牛腩
内存占用高：
1、查看哪个进程占用的
2、根据使用内存较高的的进程 进一步分析
支持(2) 反对(0)
  #3楼 [楼主] 2017-11-23 19:05 惨绿少年
@ 牛腩
监控软件：阿里云云盾组合软件，安骑士
支持(0) 反对(0)
  #4楼 2017-11-23 19:43 牛腩
@ 惨绿少年
要钱。。。
支持(0) 反对(0)
  #5楼 2017-11-23 19:44 牛腩
@ 惨绿少年
问题就在这里。。内存占用率过高的时候导致网站打不开。。这时候我xshell也是登录不上服务器的。。也就没办法top，
重启服务器后top看到的也都是差不多都是0的。。有点占用率的来来去去也就是mysqld, jwshttp, dotnet....
支持(0) 反对(0)
  #6楼 [楼主] 2017-11-23 19:47 惨绿少年
@ 牛腩
xshell 登陆不上的时候可以到aliyun的网页去，
支持(0) 反对(0)
  #7楼 [楼主] 2017-11-23 19:47 惨绿少年
@ 牛腩
使用aliyun的远程连接 进行查看，
支持(0) 反对(0)
  #8楼 [楼主] 2017-11-23 19:48 惨绿少年
@ 牛腩
做好记录，方便排查，要不然，做好日志，可以查日志，首先得找到原因，才能解决
支持(0) 反对(0)
  #9楼 [楼主] 2017-11-23 19:50 惨绿少年
@ 牛腩

支持(0) 反对(0)
  #10楼 2017-11-25 12:14 zhouandke
好详细啊, 谢谢分享
Zabbix 的服务器只能部署在 Linux上, 然后领导就否决了, 唉......
支持(0) 反对(0)
  #11楼 [楼主] 2017-11-25 13:00 惨绿少年
那你们准备在什么系统上部署？
Linux，是不错的系统
支持(0) 反对(0)
  #12楼 2017-11-27 09:47 老杨ABC
M
支持(0) 反对(0)
  #13楼 2018-02-06 17:24 云中叹
mark
支持(0) 反对(0)
  #14楼 2018-03-14 09:14 陈敬锋
很不错的博文，谢谢分享！！！
支持(0) 反对(0)
  #15楼 2018-03-14 14:36 陈其苗
排版很nice
支持(0) 反对(0)
  #16楼 2018-03-21 14:24 serlinna
很赞！！
支持(0) 反对(0)
  #17楼 2018-03-29 09:18 UserZheng
写的很详细，赞一个，同时求一个监控tomcat的详细教程！
支持(0) 反对(0)
  #18楼 2018-03-29 13:53 龙翔九天
不错，很好详细
支持(0) 反对(0)
  #19楼 2018-03-29 14:57 樊辰木风
给大佬点赞，太牛啦，请收下我的膜拜吧！
支持(0) 反对(0)
  #20楼 2018-06-06 14:32 cation
@ 牛腩
你只需要添加点swap就行了。。。
支持(0) 反对(0)
  #21楼 2018-06-16 15:57 20has
@ 惨绿少年 @牛腩
哈哈哈哈 买了三年阿里云linux 1C1G1M的 你怕是买了800元三年的活动主机把
T5机型 cpu使用量不能超过10%的基准利用率 卡不死咯
支持(0) 反对(0)
  #22楼 2018-07-06 10:36 acan1985
The frontend does not match Zabbix database.
提示这个，是怎么回事？
支持(0) 反对(0)
  #23楼 2018-09-02 22:00 elainte
mark
支持(0) 反对(0)
  #24楼 2018-09-06 10:12 阿里云代金券3
www.aliyun888.cn
支持(0) 反对(0)
  #25楼 2018-09-07 17:21 yupong
@ 惨绿少年
curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo
curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-6.repo
初学，不太明白既然系统是centos7 ，上面的这个源，为啥是Centos-6.repo，不是Centos-7.repo 呢？
支持(0) 反对(0)
  #26楼 [楼主] 2018-09-07 17:26 惨绿少年
@ yupong
不好意思，写错了，马上改
支持(0) 反对(0)
  #27楼 2018-09-07 17:32 yupong
@ 惨绿少年
写得很全面很好。 请教一下，下面这两个地方 115a 和18a 表示什么意思？

#配置zabbixserver连接mysql
sed -i.ori '115a DBPassword=zabbix' /etc/zabbix/zabbix_server.conf

#添加时区
sed -i.ori '18a php_value date.timezone Asia/Shanghai' /etc/httpd/conf.d/zabbix.conf
